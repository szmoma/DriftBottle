package com.hnmoma.driftbottle.model;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;

import com.hnmoma.driftbottle.util.MoMaLog;

import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 14): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 14;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        BottleDao.createTable(db, ifNotExists);
        ChatDao.createTable(db, ifNotExists);
        AttachmentDao.createTable(db, ifNotExists);
        UserDao.createTable(db, ifNotExists);
        BottleMsgAttachDao.createTable(db, ifNotExists);
        StrangerDao.createTable(db, ifNotExists);
        SensitiveWordDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        BottleDao.dropTable(db, ifExists);
        ChatDao.dropTable(db, ifExists);
        AttachmentDao.dropTable(db, ifExists);
        UserDao.dropTable(db, ifExists);
        BottleMsgAttachDao.dropTable(db, ifExists);
        StrangerDao.dropTable(db, ifExists);
        SensitiveWordDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            MoMaLog.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            MoMaLog.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            switch (oldVersion) {
        	case 1:
        	case 2:
        	case 3:
        	case 4:
        	case 5:
        	case 6:
        	case 7:
        	case 8:
        	case 9:
        		dropAllTables(db, true);
                onCreate(db);
    		case 10:
    			//新建敏感词表
    			SensitiveWordDao.createTable(db, false);
    		case 11:
    			//User新增5个字段（province，city）
    			String ADD_AGE_TO_User = "ALTER TABLE User ADD COLUMN AGE INTEGER";
    			String ADD_JOB_TO_User = "ALTER TABLE User ADD COLUMN JOB TEXT";
    			String ADD_HOBBY_TO_User = "ALTER TABLE User ADD COLUMN HOBBY TEXT";
    			String ADD_CONSTELL_TO_User = "ALTER TABLE User ADD COLUMN CONSTELL TEXT";
    			String ADD_BIRTHDAY_TO_User = "ALTER TABLE User ADD COLUMN BIRTHDAY TEXT";
    			
    			db.execSQL(ADD_AGE_TO_User);
    			db.execSQL(ADD_JOB_TO_User);
    			db.execSQL(ADD_HOBBY_TO_User);
    			db.execSQL(ADD_CONSTELL_TO_User);
    			db.execSQL(ADD_BIRTHDAY_TO_User);
    		case 12:
    			//User新增5个字段（isVIP，tempHeadImg）
    			String ADD_ISVIP_TO_USER = "ALTER TABLE User ADD COLUMN IS_VIP INTEGER";
    			String ADD_TEMPHEADIMG_TO_USER = "ALTER TABLE User ADD COLUMN TEMP_HEAD_IMG TEXT";
    			
    			db.execSQL(ADD_ISVIP_TO_USER);
    			db.execSQL(ADD_TEMPHEADIMG_TO_USER);
    			
    		case 13:
    			//Stranger增加了2个字段
    			String ADD_ISVIP_TO_STRANGER = "ALTER TABLE STRANGER ADD COLUMN IS_VIP INTEGER default 0";
    			String ADD_TEMPHEADIMG_TO_STRANGER = "ALTER TABLE STRANGER ADD COLUMN STATE INTEGER NOT NULL default 1";
    			
    			db.execSQL(ADD_ISVIP_TO_STRANGER);
    			db.execSQL(ADD_TEMPHEADIMG_TO_STRANGER);
            }
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(BottleDao.class);
        registerDaoClass(ChatDao.class);
        registerDaoClass(AttachmentDao.class);
        registerDaoClass(UserDao.class);
        registerDaoClass(BottleMsgAttachDao.class);
        registerDaoClass(StrangerDao.class);
        registerDaoClass(SensitiveWordDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
